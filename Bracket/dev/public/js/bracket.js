// Generated by CoffeeScript 1.2.1-pre
(function() {
  var arrangeGames, bracketHeight, currentYear, dataLoaded, gameData, getParameterByName, overlayData, showOverlay, teamsData;

  bracketHeight = 0;

  gameData = [];

  overlayData = [];

  teamsData = [];

  currentYear = 0;

  getParameterByName = function(name) {
    var regex, regexS, results;
    name = name.replace(/[\[]/, "\\[").replace(/[\]]/, "\\]");
    regexS = "[\\?&]" + name + "=([^&#]*)";
    regex = new RegExp(regexS);
    results = regex.exec(window.location.search);
    if (results == null) {
      return "";
    } else {
      return decodeURIComponent(results[1].replace(/\+/g, " "));
    }
  };

  showOverlay = function(data) {
    var moveOverlay;
    moveOverlay = $(window).height() / 2 - ($('#Overlay').height() / 2) + $(window).scrollTop();
    $('#Overlay').css('top', moveOverlay);
    $('#Overlay').fadeIn();
    return $("#Ovarlay-content").html(Mustache.to_html($("#overlay-template").html(), {
      overlayData: data
    }));
  };

  dataLoaded = function() {
    return arrangeGames();
  };

  arrangeGames = function() {
    var padding,
      _this = this;
    padding = 54;
    return $('.roundHolder').each(function(i, element) {
      var marginAdjust, numGames;
      $(element).css('left', i * 120);
      numGames = $('.bracketGame', element).length;
      marginAdjust = (padding * (16 / numGames)) + padding + (padding / 2 * ((16 / numGames) - 1));
      return $('.bracketGame', element).each(function(i, element) {
        var topPos;
        topPos = (i * (padding * (16 / numGames)) + padding + (padding / 2 * ((16 / numGames) - 1))) - 10;
        bracketHeight = Math.max(bracketHeight, topPos);
        $(element).css('top', topPos);
        return $(element).click(function() {
          var game, gameID, round, roundData;
          gameID = $(element).attr('data-id');
          for (round in gameData) {
            roundData = gameData[round].game;
            for (game in roundData) {
              if (roundData[game].id === gameID) overlayData = roundData[game];
            }
          }
          if (overlayData.awayName !== "") return showOverlay(overlayData);
        });
      });
    });
  };

  $(document).ready(function() {
    currentYear = getParameterByName("year");
    return $.getJSON("data/bracket" + currentYear + ".json", function(data) {
      gameData = data.bracket.round;
      $("#Main").append(Mustache.to_html($("#spread-template").html(), {
        bracketData: data
      }));
      dataLoaded();
      $.getJSON("data/teams.json", function(data) {
        teamsData = data;
        $("#Main").append(Mustache.to_html($("#teams-template").html(), {
          teamData: data
        }));
        $('#teamSheet').css('top', bracketHeight + 120);
        $(".leagueTeam").each(function(i, element) {
          if ($(element).attr("data-lastMan").indexOf(currentYear) === -1) {
            $(element).css("text-decoration", "line-through");
          }
          if ($(element).attr("data-participant").indexOf(currentYear.toString()) === -1) {
            return $(element).remove();
          }
        });
        return $(".leagueHolder").each(function(i, element) {
          if ($(element).children().length === 1) return $(element).remove();
        });
      });
      return $('#Overlay-close').click(function() {
        return $('#Overlay').fadeOut();
      });
    });
  });

}).call(this);
